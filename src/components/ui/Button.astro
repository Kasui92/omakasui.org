---
interface Props {
  variant?: "primary" | "secondary" | "ghost";
  size?: "sm" | "md" | "lg";
  icon?: string;
  class?: string;
  [key: string]: any;
}

const {
  variant = "primary",
  size = "md",
  icon,
  class: className,
  ...rest
} = Astro.props;

const variantClasses = {
  primary:
    "bg-[#89b29e] text-[#2a252a] hover:bg-[#7ba088] border-[#89b29e] hover:border-[#7ba088]",
  secondary:
    "bg-transparent text-[#89b29e] hover:bg-[#89b29e]/10 border-[#89b29e] hover:border-[#7ba088]",
  ghost:
    "bg-transparent text-gray-300 hover:bg-[#89b29e]/10 hover:text-[#89b29e] border-transparent",
};

const sizeClasses = {
  sm: "px-3 py-1.5 text-sm",
  md: "px-4 py-2 text-base",
  lg: "px-6 py-3 text-lg",
};
---

<button
  class={`inline-flex items-center justify-center gap-2 rounded-lg border-2 font-medium transition-all duration-300 ${variantClasses[variant]} ${sizeClasses[size]} ${className || ""}`}
  {...rest}
>
  {icon && <i class={icon} aria-hidden="true" />}
  <slot />
</button>
