---
interface Props {
  code: string;
  language?: string;
  copyable?: boolean;
  class?: string;
}

const { code, language = "bash", copyable = true, class: className } = Astro.props;
const codeId = `code-${Math.random().toString(36).substr(2, 9)}`;
---

<div
  class={`relative mx-0 my-4 flex items-center gap-4 rounded border border-[#444] bg-[#1a1a1a] p-4 ${className || ""}`}
  role="group"
  aria-label="Code block"
>
  <code
    id={codeId}
    class="scrollbar-hide flex flex-1 items-center overflow-x-auto bg-none text-sm whitespace-nowrap text-[#89b29e]"
    aria-label={`${language} code`}
    style="scrollbar-width: none; -ms-overflow-style: none;"
  >
    {code}
  </code>
  {
    copyable && (
      <button
        class="ml-4 flex flex-shrink-0 cursor-pointer items-center justify-center rounded border border-[#555] bg-[#333] px-4 py-2 text-xs text-[#bbb] transition-colors hover:bg-[#444] hover:text-white"
        data-copy-code={code}
        title="Copy to clipboard"
        aria-label="Copy code to clipboard"
      >
        <i class="nf nf-md-content_copy" />
      </button>
    )
  }
</div>

{
  copyable && (
    <script is:inline>
      document.addEventListener("DOMContentLoaded", () => {
        const copyButtons = document.querySelectorAll("[data-copy-code]");
        copyButtons.forEach((button) => {
          button.addEventListener("click", () => {
            const code = button.getAttribute("data-copy-code");
            if (code) {
              navigator.clipboard.writeText(code);
              const icon = button.querySelector("i");
              if (icon) {
                const originalClass = icon.className;
                icon.className = "nf nf-md-check";
                setTimeout(() => {
                  icon.className = originalClass;
                }, 2000);
              }
            }
          });
        });
      });
    </script>
  )
}
