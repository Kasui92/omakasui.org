---
export interface Props {
  selector?: string;
  headerTag?: string;
}

const { selector = ".markdown-content", headerTag = "h2" } = Astro.props;
---

<script is:inline define:vars={{ selector, headerTag }}>
  document.addEventListener("DOMContentLoaded", function () {
    // Add link icons to all header elements
    const headerElements = document.querySelectorAll(
      `${selector} ${headerTag}`,
    );

    headerElements.forEach((header) => {
      // Create anchor ID from header text
      const text = header.textContent || "";
      const anchorId = text
        .toLowerCase()
        .replace(/[^a-z0-9\s-]/g, "")
        .replace(/\s+/g, "-")
        .trim();

      header.id = anchorId;

      // Create link icon
      const linkIcon = document.createElement("a");
      linkIcon.className = "heading-links";
      linkIcon.innerHTML = "<i class='nf nf-md-link_variant'></i>";
      linkIcon.setAttribute("aria-label", `Link to ${text}`);
      linkIcon.title = "Copy link to clipboard";

      // Add click handler to copy link
      linkIcon.addEventListener("click", async (e) => {
        e.preventDefault();
        const url = `${window.location.origin}${window.location.pathname}#${anchorId}`;

        try {
          await navigator.clipboard.writeText(url);
        } catch (err) {
          console.error("Failed to copy link:", err);
        }
      });

      header.appendChild(linkIcon);
    });
  });
</script>
